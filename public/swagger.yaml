openapi: "3.0.0"
info:
  title: Redstone Goats Order API
  description: API for creating and managing orders with UBL XML document generation. State diagram is available at https://ibb.co/21H16g4J.
  version: 1.0.0
  
servers:
  - url: https://h13-redstone-goats.vercel.app

tags:
  - name: "User Routes"
    description: Routes for user account handling
  - name: "Buyer Routes"
    description: Routes accessible and usable by the buyer party.
  - name: "Seller Routes"
    description: Routes accessible and usable by the seller party.
  - name: "Test Routes"
    description: Routes used for tests.

paths:      
  /v1/user/register:
    post:
      summary: Register a new user.
      description: Registers a new user and returns the userId.
      tags:
        - "User Routes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                nameFirst:
                  type: string
                nameLast:
                  type: string
      responses:
        '200': 
          description: Success
          content:
            application/json:
              schema: 
                type: object
                properties:
                  userId:
                    type: integer
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
          
  /v1/user/login:
    post:
      summary: Login an existing user
      description: Authenticate a user with email and password.
      tags:
        - "User Routes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
        '400':
          description: Bad request from client
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/user/logout:
    post:
      summary: Logout an existing user
      description: Logout a user by blacklisting the JWT token.
      tags:
        - "User Routes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Token:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request from client
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/user/details:
    get:
      summary: Gets a user's details
      description: Retrieve the details about a specific user
      tags:
        - "User Routes"
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
          description: ID of the user to retrieve details for
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  numSuccessfulLogins: 
                    type: integer
                  numFailedPasswordsSinceLastLogin:
                    type: integer
        '400':
          description: Bad request from client
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
    put:
      summary: Updates a user's details
      description: Change the current user details
      tags:
        - "User Routes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                email:
                  type: string
                nameFirst:
                  type: string
                nameLast:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request from client
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/order/create:
    post:
      summary: Creates an order and produces a UBL XML document.
      description: Creates an order with items, user details, billing details, and delivery instructions.
      tags:
        - "Buyer Routes"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
        '400':
          description: Bad request from client e.g invalid bank details, invalid order date
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid or a different name is registered to the userId.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/{userId}/order/{orderId}/change:
    put:
      summary: Edit an existing order with new details and produce a new UBL XML document.
      description: Allows updating of order details, including items, user information, billing details, and delivery instructions.
      tags:
        - "Buyer Routes"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
        '400':
          description: Bad request from client e.g invalid bank details, invalid order date
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token is unauthorized/invalid or a different name is registered to the userId.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/{userId}/order/{orderId}/cancel:
    put:
      summary: Cancel an order before dispatch.
      description: Cancels an existing order and adds it to the user's cancel order history.
      tags:
        - "Buyer Routes"
        - "Seller Routes"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: Order canceled
          content:
            application/json:
              schema:
                type: object
                properties:
                  cancelled:
                    type: boolean
                  reason:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: token invalid or unauthorised
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '404':
          description: Order not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/order/{orderId}/confirm:
    put:
      summary: Finalize and confirm order.
      description: Finalizes the UBL XML document and adds it to the user's successful order history.
      tags:
        - "Buyer Routes"
        - "Seller Routes"
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order confirmed
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token invalid unauthorised
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/{userId}/order/history:
    post:
      summary: Retrieve user order history.
      description: Retrieves the order history of the specific buyer.
      tags:
        - "Buyer Routes"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order history retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderHistory"
        '400':
          description: Bad request 
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token invalid or unauthorised. 
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

  /v1/{userId}/order/recommendation:
    get:
      summary: Recommend orders based on history.
      description: Views trends in order history and recommends an order to the buyer.
      tags:
        - "Buyer Routes"
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  recommendations:
                    type: array
                    items:
                      $ref: "#/components/schemas/Item"
        '401':
          description: Token invalid or unauthorised.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"


  /v1/order/{userId}/sales:
    get:
      summary: Send sales analytics data to the seller.
      description: Sends analytical data to the product distributor, with different options for data format.
      tags:
        - "Seller Routes"
      parameters:
        - name: CSV
          in: query
          schema:
            type: boolean
            default: true
        - name: JSON
          in: query
          schema:
            type: boolean
            default: true
        - name: PDF
          in: query
          schema:
            type: boolean
            default: true
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Sales data sent
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SalesData"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"
        '401':
          description: Token unauthorised or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  Error:
                    type: string
                    example: "Error Message Here"

components:
  schemas:
    OrderRequest:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
        quantities:
          type: array
          items:
            type: number
        buyer:
          $ref: "#/components/schemas/UserSimple"
        billingDetails:
          $ref: "#/components/schemas/BillingDetailsParam"
        delivery:
          $ref: "#/components/schemas/DeliveryInstructions"
        lastEdited:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - pending
            - confirmed
            - cancelled
        totalPrice:
          type: number
        createdAt:
          type: string
          format: date-time
    UserSimple:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        streetName:
          type: string
        cityName:
          type: string
        postalZone:
          type: string
        cbcCode:
          type: string
    BillingDetailsParam:
      type: object
      properties:
        creditCardNumber:
          type: string
        CVV:
          type: integer
          format: int32
        expiryDate:
          type: string
          format: date
    DeliveryInstructions:
      type: object
      properties:
        streetName:
          type: string
        citName:
          type: string
        postalZone:
          type: string
        countrySubentity:
          type: string
        addressLine:
          type: string
        cbcCode:
          type: string
        startDate:
          type: string
          format: date
        startTime:
          type: string
          format: date-time
        endDate:
          type: string
          format: date
        endTime:
          type: string
          format: date-time
    Status:
      type: string
      enum:
        - pending
        - confirmed
        - cancelled
        
    OrderUpdate:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"
    Item:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        price:
          type: number
        description:
          type: string
        seller:
          type: object
          $ref: "#/components/schemas/UserSimple"
        
    User:
      type: object
      properties:
        userId:
          type: integer
        name:
          type: string
    BillingDetails:
      type: object
      properties:
        creditCardNumber:
          type: string
        CVV:
          type: integer
        expiryDate:
          type: string
    EmailRequest:
      type: object
      properties:
        emailFrom:
          type: string
        emailTo:
          type: string
        status:
          type: boolean
    OrderHistory:
      type: object
      properties:
        successfulOrders:
          type: array
          items: 
            $ref: "#/components/schemas/OrderRequest"
        cancelledOrders:
          type: array
          items: 
            $ref: "#/components/schemas/OrderRequest"
    OrderRecommendation:
      type: object
      properties:
        recommendedOrder:
          type: array
          items: 
            $ref: "#/components/schemas/OrderRequest"
    SalesData:
      type: object
      properties:
        sales:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              name:
                type: string
              description:
                type: string
              price:
                type: number
              amountSold:
                type: integer
        CSVurl:
          type: string
        PDFurl:
          type: string